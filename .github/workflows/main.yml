name: CI/CD Pipeline

on:
  push:
    branches:
      - task1

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run tests with coverage
      continue-on-error: true
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        DB_NAME: ${{ secrets.DB_NAME }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: |
        coverage run --source='.' -m pytest
        coverage report -m
        coverage xml -o coverage.xml
        bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up GCP authentication
      run: |
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode > ${HOME}/gcp-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloudfresh-registry/kanban-board:latest .
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloudfresh-registry/kanban-board:latest

    - name: Deploy to GCP
      run: |
        gcloud run deploy kanban-board --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloudfresh-registry/kanban-board:latest \
        --platform managed \
        --region ${{ secrets.GCP_REGION }} \
        --allow-unauthenticated \
        --set-env-vars "MONGODB_URI=${{ secrets.MONGODB_URI }}" \
        --set-env-vars "SECRET_KEY=${{ secrets.SECRET_KEY }}" \
        --set-env-vars "DB_NAME=${{ secrets.DB_NAME }}"